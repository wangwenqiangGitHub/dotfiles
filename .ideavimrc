"为IdeaVim插件增加自动切换英文输入法的功能
set keep-english-in-normal-and-restore-in-insert

let mapleader=" "

"显示行号
set nu
"显示相对行号
set rnu
"高亮搜索
set hlsearch
" 自动定位到输入中的字符串，不需要回车搜索
set incsearch
" 共享系统粘贴板
set clipboard=unnamed
" 搜索时智能匹配大小写
set ignorecase smartcase
" 设置相对行号
"set relativenumber

noremap L $
noremap H ^
noremap ; :

" Normal + Visual
noremap * *zz
noremap # #zz
noremap <leader>s :w<cr>
noremap <leader>z :wq<cr>

inoremap jj <esc>

" 设置debug为 zd
nnoremap <leader>d :action Debug<CR>
" 设置run 为 zr
nnoremap <leader>r :action Run<CR>

" set plug
"g:EasyMotion_override_acejump = 0
" 设置依赖于IdeaVim-EasyMotion 和 AceJump 两个插件
set easymotion
" 启用vim surround功能
set surround
" multiple-cursors
set multiple-cursors
" 注释插件模拟
set commentary

nnoremap <leader>y vawy
nnoremap <leader>p vawp
"let mapleader=";"
nnoremap <leader>r :action RunClass<CR>
nnoremap <leader>B :action Rebuild<CR>
nnoremap <leader>b :action Build<CR>
inoremap <c-j> :action EditorDown<CR>
inoremap <c-l> :action EditorRight<CR>
inoremap <c-h> :action EditorLeft<CR>
inoremap <c-k> :action EditorUp<CR>

noremap <leader>gd :action GotoDeclaration<CR>
nmap <Leader><Leader> V
vmap <Leader><Leader> <Esc>
nmap <leader>m %


" easy window navigation
"nnoremap <c-l> <c-w>l
"nnoremap <c-j> <c-w>j
"nnoremap <c-h> <c-w>h
"nnoremap <c-k> <c-w>k
nnoremap <a-h> gT
nnoremap <a-l> gt
nnoremap <c-s-tab> gT
nnoremap <c-tab> gt

" clear the search buffer when hitting return
nnoremap <space><cr> :nohlsearch<cr>


" code navigation
nnoremap <space>] :action GotoImplementation<cr>
nnoremap <space>[ :action GotoSuperMethod<cr>
nnoremap <space>u :action FindUsages<cr>
nnoremap <space>gt :action GotoTest<cr>
nnoremap <space>k :action HighlightUsagesInFile<cr>
nnoremap \R :action RunClass<cr>
nnoremap \r :action Run<cr>
nnoremap \D :action DebugClass<cr>
nnoremap \d :action Debug<cr>
nnoremap \c :action CheckStyleCurrentFileAction<cr>

" actios
""https://gist.github.com/zchee/9c78f91cc5ad771c1f5d   zchee/actionlist.vim
noremap <space>\ :action VimFilePrevious<cr>
"文件查找
map <space>ff :action SearchEverywhere<cr>
nnoremap <space>fs :action GotoSymbol<cr>
nnoremap <space>fa :action GotoAction<cr>
nnoremap <space>fb :action ToggleLineBreakpoint<cr>
nnoremap <space>fc   :action GotoClass<cr>
map <space>fw :action ReplaceInPath<cr>
" 查找单词函数被用到
nnoremap <space>fr :action FindUsages<cr> 
map <space>fp :action FindInPath<cr>

nnoremap <space>q! :action CloseProject<cr>

nnoremap <space>zz :action CollapseRegion<cr>
nnoremap <space>za :action ExpandAllRegions<cr>

“ buffer
nnoremap <space>e :action Switcher<cr>
"函数列表 <C-F12>
nnoremap <space>fo :action FileStructurePopup<cr>
" previous method
noremap [[ <ESC>:action MethodUp<CR>
" next method
noremap ]] <ESC>:action MethodDown<CR>

" 窗口切换
nmap <leader>sh     :action NextSplitter<CR>
nmap <a-n>          :action NextSplitter<CR>
nmap <leader>sl     :action PrevSplitter<CR>
nmap <a-p>          :action PrevSplitter<CR>

nmap <leader>so :action ChangeSplitOrientation<CR>
nmap <leader>sg :action SplitHorizontally<CR>
nmap <leader>sv :action SplitVertically<CR>
nmap <leader>gg :action Git.Menu<CR>
nmap <leader>gb :action Git.Branches<CR>
"nmap <leader>b  :action RebuildSolutionAction<CR>
nmap <leader>ss :action EditorToggleShowGutterIcons<CR>

nmap <leader>sc :action CloseAllEditors<CR>
nmap <leader>cc :action CloseCurrentEditor<CR>

nnoremap cw ciw
nnoremap dw daw
nnoremap vw viw
nnoremap yw yiw

nnoremap c" ci"
nnoremap d" di"
nnoremap v" vi"
nnoremap y" yi"

nnoremap c' ci'
nnoremap d' di'
nnoremap v' vi'
nnoremap y' yi'

nnoremap c) ci)
nnoremap d) di)
nnoremap v) vi)
nnoremap y) yi)
nnoremap c( ca(
nnoremap d( da(
nnoremap v( va(
nnoremap y( ya(

nnoremap c} ci}
nnoremap d} di}
nnoremap v} vi}
nnoremap y} yi}
nnoremap c{ ca{
nnoremap d{ da{
nnoremap v{ va{
nnoremap y{ ya{

nnoremap c] ci]
nnoremap d] di]
nnoremap v] vi]
nnoremap y] yi]
nnoremap c[ ca[
nnoremap d[ da[
nnoremap v[ va[
nnoremap y[ ya[

nnoremap c> ci>
nnoremap d> di>
nnoremap v> vi>
nnoremap y> yi>
nnoremap c< ca<
nnoremap d< da<
nnoremap v< va<
