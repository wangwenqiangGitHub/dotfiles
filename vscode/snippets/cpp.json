{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"cpp file header": {
		"prefix": "head",
		"body": [
			"/*********************************************************************************",
			"* @file        test.cpp",
			"* @brief       $1",
			"* @details     $2",
			"* @author      wwq",
			"* @date        $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
			"* @copyright   Copyright (c) $CURRENT_YEAR CICTCI V2X Division.",
			"* @verbatim",
			"*",
			"*  Change History:",
			"*  Date          Author       Version       Description",
			"*  ------------------------------------------------------------------------------",
			"*   $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE     wwq         1.0           Create this file",
			"*",
			"* @endverbatim",
			"********************************************************************************/",
			"$3"
		],
		"description": "cpp file header"
	},
	"#inc": {
		"prefix": "#inc",
		"body": [
			"#include \"$1\""
		],
		"description": "Code snippet for #include \" \""
	},
	"#inc<": {
		"prefix": "#inc<",
		"body": [
			"#include <$1>"
		],
		"description": "Code snippet for #include \" \""
	},
	"union": {
		"prefix": "union",
		"body": [
			"union ${MyUnion}",
			"{",
				"$1",
				"};"
		],
		"description": "Code snippet for union"
	},
	"foreach": {
		"prefix": "foreach",
		"body": [
			"for(auto ${var} : ${collection_to_loop})",
			"{",
				"$1",
				"}"
		],
		"description": "Code snippet for range-based for loop (c++11) statement"
	},
	"#ifdef": {
		"prefix": "#ifdef",
		"body": [
			"#ifdef ${DEBUG}",
			"$1",
			"#endif // ${DEBUG}"
		],
		"description": "Code snippet for #ifdef"
	},
	"#ifndef": {
		"prefix": "#ifndef",
		"body": [
			"#ifndef ${1:1}",
			"#define $1",
			"$2",
			"#endif // !$1"
		],
		"description": "Code snippet for #ifndef"
	},
	"pr": {
		"prefix": "pr",
		"body": [
			"printf("<%s %d>\n",__func__, __LINE__);"
		],
		"description": "printf line"
	}
}
